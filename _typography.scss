@import 'media';

// font
$txt-font-primary:               'Manrope', sans-serif !default;
$txt-font-secondary:             $txt-font-primary !default;
$txt-font-accent:                $txt-font-primary !default;

// default
$txt-size-default:               16px !default;
$txt-size-default-xxl:           16px !default;
$txt-size-default-xl:            16px !default;
$txt-size-default-lg:            16px !default;
$txt-size-default-md:            16px !default;
$txt-size-default-sm:            16px !default;
$txt-line-height-default:        1.6 !default;
$txt-breakpoint:                 980px !default;

$txt-config: (
  h1: (
    font-size: projectUnit($txt-size-default * 2.2),
    font-size-breakpoint: projectUnit($txt-size-default * 2.2 - 0.3),
    line-height: 1.5,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  h2: (
    font-size: projectUnit($txt-size-default * 2),
    font-size-breakpoint: projectUnit($txt-size-default * 2 - 0.3),
    line-height: 1.5,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  h3: (
    font-size: projectUnit($txt-size-default * 1.8),
    font-size-breakpoint: projectUnit($txt-size-default * 1.8 - 0.2),
    line-height: 1.5,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  h4: (
    font-size: projectUnit($txt-size-default * 1.5),
    font-size-breakpoint: projectUnit($txt-size-default * 1.5 - 0.15),
    line-height: 1.5,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  h5: (
    font-size: projectUnit($txt-size-default * 1.3),
    font-size-breakpoint: projectUnit($txt-size-default * 1.3 - 0.1),
    line-height: 1.3,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  h6: (
    font-size: projectUnit($txt-size-default * 1.125),
    font-size-breakpoint: projectUnit($txt-size-default * 1.125 - 0.05),
    line-height: 1.5,
    font-weight: bold,
    font-family: $txt-font-primary,
  ),
  p: (
    font-size: projectUnit($txt-size-default * 1),
    font-size-breakpoint: projectUnit($txt-size-default * 1),
    line-height: 1.5,
    font-weight: 400,
    font-family: $txt-font-primary,
  ),
  5xl: (
    font-size: projectUnit($txt-size-default * 3.7),
    line-height: 1.1,
    font-weight: null,
    font-family: null,
  ),
  4xl: (
    font-size: projectUnit($txt-size-default * 3.3),
    line-height: 1.1,
    font-weight: 600,
    font-family: null,
  ),
  3xl: (
    font-size: projectUnit($txt-size-default * 2.7),
    line-height: 1.3,
    font-weight: 600,
    font-family: null,
  ),
  2xl: (
    font-size: projectUnit($txt-size-default * 2.2),
    line-height: 1.6,
    font-weight: null,
    font-family: null,
  ),
  xl: (
    font-size: projectUnit($txt-size-default * 1.8),
    line-height: 1.6,
    font-weight: null,
    font-family: null,
  ),
  lg: (
    font-size: projectUnit($txt-size-default * 1.5),
    line-height: 1.6,
    font-weight: null,
    font-family: null,
  ),
  md: (
    font-size: projectUnit($txt-size-default * 1.2),
    line-height: 1.6,
    font-weight: 500,
    font-family: null,
  ),
  ms: (
    font-size: projectUnit($txt-size-default * 1.1),
    line-height: 1.6,
    font-weight: 500,
    font-family: null,
  ),
  base: (
    font-size: projectUnit($txt-size-default),
    line-height: $txt-line-height-default,
    font-weight: normal,
    font-family: $txt-font-primary,
  ),
  xs: (
    font-size: projectUnit($txt-size-default * 0.9),
    line-height: 1.4,
    font-weight: null,
    font-family: null,
  ),
  2xs: (
    font-size: projectUnit($txt-size-default * 0.8),
    line-height: 1.3,
    font-weight: null,
    font-family: null,
  ),
  3xs: (
    font-size: projectUnit($txt-size-default * 0.7),
    line-height: 1.1,
    font-weight: normal,
    font-family: null,
  ),
  4xs: (
    font-size: projectUnit($txt-size-default * 0.6),
    line-height: 1.1,
    font-weight: normal,
    font-family: null,
  ),
  5xs: (
    font-size: projectUnit($txt-size-default * 0.5),
    line-height: 1.1,
    font-weight: normal,
    font-family: null,
  ),
);


// mixins
@function txt-size($key: null) {
  @return _map_get_key($txt-config, $key font-size);
}
@mixin txt($key: null, $props: font-size line-height font-weight font-family) {
  @if ($key and $props) {
    @each $prop in $props {
      @if ($prop) {
        #{$prop}: _map_get_key($txt-config, $key $prop);
      }
    }
    @if (_map_get_key($txt-config, $key font-size-breakpoint) != null) {
      @include screenMax($txt-breakpoint) {
        font-size: _map_get_key($txt-config, $key font-size-breakpoint);
      }
    }
  }

  @content;
}